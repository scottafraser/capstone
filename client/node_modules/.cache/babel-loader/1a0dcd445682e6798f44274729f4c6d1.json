{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict'; // WARNING: this code is untranspiled and is used in browser too.\n// Please make sure any changes are in ES5 or contribute a Babel compile step.\n// Some custom utilities to prettify Webpack output.\n// This is quite hacky and hopefully won't be needed when Webpack fixes this.\n// https://github.com/webpack/webpack/issues/2878\n\nvar chalk = require('chalk');\n\nvar friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n} // Cleans up webpack error messages.\n// eslint-disable-next-line no-unused-vars\n\n\nfunction formatMessage(message, isError) {\n  var lines = message.split('\\n'); // Strip `WorkerError` header off message before parsing\n  // https://github.com/webpack-contrib/thread-loader/blob/6fb5daff313c4839196cf533bdcdf14815a386d2/src/WorkerError.js\n\n  lines = lines.filter(function (message) {\n    return message.indexOf('Thread Loader (Worker') === -1;\n  }); // Strip `ModuleWarning` head off message before parsing (because of ESLint)\n  // https://github.com/webpack/webpack/blob/c77030573de96b8293c69dd396492f8e2d46561e/lib/ModuleWarning.js\n\n  var moduleWarningPrefix = 'Module Warning: ';\n\n  if (lines[1].indexOf(moduleWarningPrefix) === 0) {\n    lines[1] = lines[1].slice(moduleWarningPrefix.length);\n  } else if (lines[1].match(/Module Warning \\(from.*?\\):/)) {\n    lines.splice(1, 1);\n  } // Strip `ModuleError` header off message before parsing\n  // https://github.com/webpack/webpack/blob/c77030573de96b8293c69dd396492f8e2d46561e/lib/ModuleError.js\n\n\n  var moduleErrorPrefix = 'Module Error: ';\n\n  if (lines[1].indexOf(moduleErrorPrefix) === 0) {\n    lines[1] = lines[1].slice(moduleErrorPrefix.length);\n  } else if (lines[1].match(/Module Error \\(from.*?\\):/)) {\n    lines.splice(1, 1);\n  } // Simplify `ModuleBuildError` before parsing (these may be nested so we use a while loop)\n  // https://github.com/webpack/webpack/blob/c77030573de96b8293c69dd396492f8e2d46561e/lib/ModuleBuildError.js\n\n\n  while (lines.length > 2 && lines[1].match(/Module build failed \\(from.*?\\):/)) {\n    lines.splice(1, 1);\n    lines[1] = 'Module build failed: ' + lines[1];\n  }\n\n  if (lines.length > 2 && lines[1] === '') {\n    // Remove extra newline.\n    lines.splice(1, 1);\n  } // Remove webpack-specific loader notation from filename.\n  // Before:\n  // ./~/css-loader!./~/postcss-loader!./src/App.css\n  // After:\n  // ./src/App.css\n\n\n  if (lines[0].lastIndexOf('!') !== -1) {\n    lines[0] = lines[0].substr(lines[0].lastIndexOf('!') + 1);\n  }\n\n  lines = lines.filter(function (line) {\n    // Webpack adds a list of entry points to warning messages:\n    //  @ ./src/index.js\n    //  @ multi react-scripts/~/react-dev-utils/webpackHotDevClient.js ...\n    // It is misleading (and unrelated to the warnings) so we clean it up.\n    // It is only useful for syntax errors but we have beautiful frames for them.\n    return line.indexOf(' @ ') !== 0;\n  }); // line #0 is filename\n  // line #1 is the main error message\n\n  if (!lines[0] || !lines[1]) {\n    return lines.join('\\n');\n  } // Cleans up verbose \"module not found\" messages for files and packages.\n\n\n  if (lines[1].indexOf('Module not found: ') === 0) {\n    lines = [lines[0], // Clean up message because \"Module not found: \" is descriptive enough.\n    lines[1].replace(\"Cannot resolve 'file' or 'directory' \", '').replace('Cannot resolve module ', '').replace('Error: ', '').replace('[CaseSensitivePathsPlugin] ', '')];\n  } // Cleans up syntax error messages.\n\n\n  if (lines[1].indexOf('Module build failed: ') === 0) {\n    lines[1] = lines[1].replace('Module build failed: Syntax Error ', friendlySyntaxErrorLabel);\n    lines[1] = lines[1].replace(/Module build failed: .*?: /, friendlySyntaxErrorLabel + ' ');\n    lines[1] = lines[1].trim();\n\n    if (lines[1] === friendlySyntaxErrorLabel && lines[2] === '') {\n      lines.splice(2, 1);\n\n      if (lines.length > 2) {\n        lines[1] += ' ' + lines[2];\n        lines.splice(2, 1);\n      }\n    }\n  } // Clean up export errors.\n  // TODO: we should really send a PR to Webpack for this.\n\n\n  var exportError = /\\s*(.*?)\\s*(?:\")?export '(.+?)' was not found in '(.+?)'/;\n\n  if (lines[1].match(exportError)) {\n    lines[1] = lines[1].replace(exportError, \"$1  '$3' does not contain an export named '$2'.\");\n  }\n\n  lines[0] = chalk.inverse(lines[0]); // Reassemble the message.\n\n  message = lines.join('\\n'); // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by WebPack. For more information see\n  // https://github.com/facebook/create-react-app/pull/1050\n\n  message = message.replace(/^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm, ''); // at ... ...:x:y\n\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, ''); // at <anonymous>\n\n  return message.trim();\n}\n\nfunction formatWebpackMessages(json) {\n  var formattedErrors = json.errors.map(function (message) {\n    return formatMessage(message, true);\n  });\n  var formattedWarnings = json.warnings.map(function (message) {\n    return formatMessage(message, false);\n  });\n  var result = {\n    errors: formattedErrors,\n    warnings: formattedWarnings\n  };\n\n  if (result.errors.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    // This prevents a confusing ESLint parsing error\n    // preceding a much more useful Babel syntax error.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n\n  return result;\n}\n\nmodule.exports = formatWebpackMessages;","map":{"version":3,"sources":["/Users/Guest/Desktop/capstone/client/node_modules/react-dev-utils/formatWebpackMessages.js"],"names":["chalk","require","friendlySyntaxErrorLabel","isLikelyASyntaxError","message","indexOf","formatMessage","isError","lines","split","filter","moduleWarningPrefix","slice","length","match","splice","moduleErrorPrefix","lastIndexOf","substr","line","join","replace","trim","exportError","inverse","formatWebpackMessages","json","formattedErrors","errors","map","formattedWarnings","warnings","result","some","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n// WARNING: this code is untranspiled and is used in browser too.\n// Please make sure any changes are in ES5 or contribute a Babel compile step.\n\n// Some custom utilities to prettify Webpack output.\n// This is quite hacky and hopefully won't be needed when Webpack fixes this.\n// https://github.com/webpack/webpack/issues/2878\n\nvar chalk = require('chalk');\nvar friendlySyntaxErrorLabel = 'Syntax error:';\n\nfunction isLikelyASyntaxError(message) {\n  return message.indexOf(friendlySyntaxErrorLabel) !== -1;\n}\n\n// Cleans up webpack error messages.\n// eslint-disable-next-line no-unused-vars\nfunction formatMessage(message, isError) {\n  var lines = message.split('\\n');\n\n  // Strip `WorkerError` header off message before parsing\n  // https://github.com/webpack-contrib/thread-loader/blob/6fb5daff313c4839196cf533bdcdf14815a386d2/src/WorkerError.js\n  lines = lines.filter(function(message) {\n    return message.indexOf('Thread Loader (Worker') === -1;\n  });\n\n  // Strip `ModuleWarning` head off message before parsing (because of ESLint)\n  // https://github.com/webpack/webpack/blob/c77030573de96b8293c69dd396492f8e2d46561e/lib/ModuleWarning.js\n  var moduleWarningPrefix = 'Module Warning: ';\n  if (lines[1].indexOf(moduleWarningPrefix) === 0) {\n    lines[1] = lines[1].slice(moduleWarningPrefix.length);\n  } else if (lines[1].match(/Module Warning \\(from.*?\\):/)) {\n    lines.splice(1, 1);\n  }\n\n  // Strip `ModuleError` header off message before parsing\n  // https://github.com/webpack/webpack/blob/c77030573de96b8293c69dd396492f8e2d46561e/lib/ModuleError.js\n  var moduleErrorPrefix = 'Module Error: ';\n  if (lines[1].indexOf(moduleErrorPrefix) === 0) {\n    lines[1] = lines[1].slice(moduleErrorPrefix.length);\n  } else if (lines[1].match(/Module Error \\(from.*?\\):/)) {\n    lines.splice(1, 1);\n  }\n\n  // Simplify `ModuleBuildError` before parsing (these may be nested so we use a while loop)\n  // https://github.com/webpack/webpack/blob/c77030573de96b8293c69dd396492f8e2d46561e/lib/ModuleBuildError.js\n  while (\n    lines.length > 2 &&\n    lines[1].match(/Module build failed \\(from.*?\\):/)\n  ) {\n    lines.splice(1, 1);\n    lines[1] = 'Module build failed: ' + lines[1];\n  }\n\n  if (lines.length > 2 && lines[1] === '') {\n    // Remove extra newline.\n    lines.splice(1, 1);\n  }\n\n  // Remove webpack-specific loader notation from filename.\n  // Before:\n  // ./~/css-loader!./~/postcss-loader!./src/App.css\n  // After:\n  // ./src/App.css\n  if (lines[0].lastIndexOf('!') !== -1) {\n    lines[0] = lines[0].substr(lines[0].lastIndexOf('!') + 1);\n  }\n\n  lines = lines.filter(function(line) {\n    // Webpack adds a list of entry points to warning messages:\n    //  @ ./src/index.js\n    //  @ multi react-scripts/~/react-dev-utils/webpackHotDevClient.js ...\n    // It is misleading (and unrelated to the warnings) so we clean it up.\n    // It is only useful for syntax errors but we have beautiful frames for them.\n    return line.indexOf(' @ ') !== 0;\n  });\n\n  // line #0 is filename\n  // line #1 is the main error message\n  if (!lines[0] || !lines[1]) {\n    return lines.join('\\n');\n  }\n\n  // Cleans up verbose \"module not found\" messages for files and packages.\n  if (lines[1].indexOf('Module not found: ') === 0) {\n    lines = [\n      lines[0],\n      // Clean up message because \"Module not found: \" is descriptive enough.\n      lines[1]\n        .replace(\"Cannot resolve 'file' or 'directory' \", '')\n        .replace('Cannot resolve module ', '')\n        .replace('Error: ', '')\n        .replace('[CaseSensitivePathsPlugin] ', ''),\n    ];\n  }\n\n  // Cleans up syntax error messages.\n  if (lines[1].indexOf('Module build failed: ') === 0) {\n    lines[1] = lines[1].replace(\n      'Module build failed: Syntax Error ',\n      friendlySyntaxErrorLabel\n    );\n    lines[1] = lines[1].replace(\n      /Module build failed: .*?: /,\n      friendlySyntaxErrorLabel + ' '\n    );\n    lines[1] = lines[1].trim();\n\n    if (lines[1] === friendlySyntaxErrorLabel && lines[2] === '') {\n      lines.splice(2, 1);\n      if (lines.length > 2) {\n        lines[1] += ' ' + lines[2];\n        lines.splice(2, 1);\n      }\n    }\n  }\n\n  // Clean up export errors.\n  // TODO: we should really send a PR to Webpack for this.\n  var exportError = /\\s*(.*?)\\s*(?:\")?export '(.+?)' was not found in '(.+?)'/;\n  if (lines[1].match(exportError)) {\n    lines[1] = lines[1].replace(\n      exportError,\n      \"$1  '$3' does not contain an export named '$2'.\"\n    );\n  }\n\n  lines[0] = chalk.inverse(lines[0]);\n\n  // Reassemble the message.\n  message = lines.join('\\n');\n  // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by WebPack. For more information see\n  // https://github.com/facebook/create-react-app/pull/1050\n  message = message.replace(\n    /^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm,\n    ''\n  ); // at ... ...:x:y\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, ''); // at <anonymous>\n\n  return message.trim();\n}\n\nfunction formatWebpackMessages(json) {\n  var formattedErrors = json.errors.map(function(message) {\n    return formatMessage(message, true);\n  });\n  var formattedWarnings = json.warnings.map(function(message) {\n    return formatMessage(message, false);\n  });\n  var result = {\n    errors: formattedErrors,\n    warnings: formattedWarnings,\n  };\n  if (result.errors.some(isLikelyASyntaxError)) {\n    // If there are any syntax errors, show just them.\n    // This prevents a confusing ESLint parsing error\n    // preceding a much more useful Babel syntax error.\n    result.errors = result.errors.filter(isLikelyASyntaxError);\n  }\n  return result;\n}\n\nmodule.exports = formatWebpackMessages;\n"]},"metadata":{},"sourceType":"script"}