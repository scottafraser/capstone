{"ast":null,"code":"var _jsxFileName = \"/Users/Guest/Desktop/capstone/client/src/components/App.js\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport record from \"../images/record.jpeg\";\nimport NavBar from \"./NavBar\";\nimport PropTypes from \"prop-types\";\nimport NowPlaying from './NowPlaying';\nimport { itemsFetchDataSuccess, userPlaylists, setUser as _setUser, userIsLoggedIn, getUserCurrentSong, getUserPlaylists } from \"../actions/items\"; //spotify library\n\nvar spotifyApi = new SpotifyWebApi();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      var token = hashParams.access_token;\n\n      if (token) {\n        spotifyApi.setAccessToken(token);\n      }\n\n      spotifyApi.getMe().then(function (response) {\n        _this.props.setUser(response);\n\n        var userLoggedIn = token ? true : false;\n\n        _this.props.loggedIn(userLoggedIn);\n      });\n    }\n  }, {\n    key: \"getNowPlaying\",\n    value: function getNowPlaying() {\n      var _this2 = this;\n\n      spotifyApi.getMyCurrentPlaybackState().then(function (response) {\n        _this2.props.getSong(response);\n      });\n    }\n  }, {\n    key: \"getPlaylists\",\n    value: function getPlaylists() {\n      var _this3 = this;\n\n      spotifyApi.getUserPlaylists().then(function (response) {\n        console.log(response);\n\n        _this3.props.getPlaylists(response);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(this.props);\n\n      if (this.props.hasErrored) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Sorry! There was an error loading the items\");\n      }\n\n      if (this.props.isLoading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Loading\\u2026\");\n      }\n\n      console.log(this.props.isLoggedIn);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        user: this.props.user,\n        login: this.props.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: record,\n        alt: \"recrd\",\n        className: \"App-logo\",\n        style: {\n          height: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), this.props.isLoggedIn && React.createElement(NowPlaying, {\n        isLoggedIn: this.props.isLoggedIn,\n        getNowPlaying: this.props.getSong,\n        nowPlaying: this.props.nowPlaying,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this4.getPlaylists();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Check User Playlists\"), React.createElement(\"div\", {\n        className: \"playlists\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.props.userPlaylists.map(function (playlist, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, playlist.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          src: playlist.images[0].url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nApp.propTypes = {\n  thisUser: PropTypes.object,\n  setUser: PropTypes.func,\n  isLoggedIn: PropTypes.bool\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    items: state.items,\n    isLoggedIn: state.isLoggedIn,\n    user: state.user,\n    nowPlaying: state.nowPlaying,\n    userPlaylists: state.userPlaylists,\n    hasErrored: state.itemsHasErrored,\n    isLoading: state.itemsIsLoading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setUser: function setUser(response) {\n      return dispatch(_setUser(response));\n    },\n    loggedIn: function loggedIn(bool) {\n      return dispatch(userIsLoggedIn(bool));\n    },\n    getSong: function getSong(response) {\n      return dispatch(getUserCurrentSong(response));\n    },\n    getPlaylists: function getPlaylists(response) {\n      return dispatch(getUserPlaylists(response));\n    } // removeItem: (index) => dispatch(deleteItem(index))\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // getRecentTracks() {\n//   spotifyApi.getMyRecentlyPlayedTracks().then(response => {\n//     this.setState({ savedTracks: response.items });\n//   });\n// }\n\n{\n  /* recent tracks\n         {this.state.savedTracks.map((song, index) => <li key={index}>\n             {song.track.artists[0].name}\n             <br />\n             {song.track.album.name}\n             <br />\n             {console.log(song.track.album.images)}\n             <img src={song.track.album.images[1].url} />\n           </li>)} */\n}","map":{"version":3,"sources":["/Users/Guest/Desktop/capstone/client/src/components/App.js"],"names":["React","Component","connect","SpotifyWebApi","record","NavBar","PropTypes","NowPlaying","itemsFetchDataSuccess","userPlaylists","setUser","userIsLoggedIn","getUserCurrentSong","getUserPlaylists","spotifyApi","App","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","token","access_token","setAccessToken","getMe","then","response","props","userLoggedIn","loggedIn","getMyCurrentPlaybackState","getSong","console","log","getPlaylists","hasErrored","isLoading","isLoggedIn","user","height","nowPlaying","map","playlist","index","name","images","url","propTypes","thisUser","object","func","bool","mapStateToProps","state","items","itemsHasErrored","itemsIsLoading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport record from \"../images/record.jpeg\";\nimport NavBar from \"./NavBar\";\nimport PropTypes from \"prop-types\";\nimport NowPlaying from './NowPlaying'\nimport {\n  itemsFetchDataSuccess,\n  userPlaylists,\n  setUser,\n  userIsLoggedIn,\n  getUserCurrentSong,\n  getUserPlaylists} from \"../actions/items\";\n\n\n\n//spotify library\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass App extends Component {\n \n  componentDidMount() {\n    var hashParams = {};\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    const token = hashParams.access_token;\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n    spotifyApi.getMe().then(response => {\n      this.props.setUser(response)\n      let userLoggedIn = token ? true : false;\n      this.props.loggedIn(userLoggedIn);\n    }); \n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      this.props.getSong(response)\n    });\n  }\n\n  getPlaylists() {\n    spotifyApi.getUserPlaylists().then(response => {\n      console.log(response)\n      this.props.getPlaylists(response);\n    });\n  }\n\n  render() {\n    console.log(this.props)\n\n    if (this.props.hasErrored) {\n      return <p>Sorry! There was an error loading the items</p>;\n    }\n    if (this.props.isLoading) {\n      return <p>Loading…</p>;\n    }\n    console.log(this.props.isLoggedIn)\n    return <div className=\"App\">\n        <NavBar user={this.props.user} login={this.props.isLoggedIn} />\n        <div>\n          <img src={record} alt=\"recrd\" className=\"App-logo\" style={{ height: 150 }} />\n        </div>\n        {this.props.isLoggedIn && <NowPlaying isLoggedIn={this.props.isLoggedIn} getNowPlaying={this.props.getSong} nowPlaying={this.props.nowPlaying}/> }\n        {/* {this.props.isLoggedIn && <div>\n            <button onClick={() => this.getNowPlaying()}>\n              Check Now Playing\n            </button>\n            <h1>{this.props.nowPlaying.name}</h1>\n            <img src={this.props.nowPlaying.img} style={{ height: 150 }} />\n          </div>} */}\n        <br />\n        <button onClick={() => this.getPlaylists()}>\n          Check User Playlists\n        </button>\n        {/* <button onClick={() => this.getRecentTracks()}>\n          Check Users Recent Tracks\n        </button> */}\n        <div className=\"playlists\">\n        {this.props.userPlaylists.map((playlist, index) => \n        <div key={index}>\n            {playlist.name}\n            <br />\n            <img src={playlist.images[0].url} />\n          </div>)}\n        </div>\n      </div>;\n  }\n}\n\nApp.propTypes = {\n  thisUser: PropTypes.object,\n  setUser: PropTypes.func,\n  isLoggedIn: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    items: state.items,\n    isLoggedIn: state.isLoggedIn,\n    user: state.user,\n    nowPlaying: state.nowPlaying,\n    userPlaylists: state.userPlaylists,\n    hasErrored: state.itemsHasErrored,\n    isLoading: state.itemsIsLoading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n       setUser: (response) => dispatch(setUser(response)),\n       loggedIn: (bool) => dispatch(userIsLoggedIn(bool)),\n       getSong: (response) => dispatch(getUserCurrentSong(response)),\n       getPlaylists: (response) => dispatch(getUserPlaylists(response))\n    // removeItem: (index) => dispatch(deleteItem(index))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n\n  // getRecentTracks() {\n  //   spotifyApi.getMyRecentlyPlayedTracks().then(response => {\n  //     this.setState({ savedTracks: response.items });\n  //   });\n  // }\n\n{/* recent tracks\n        {this.state.savedTracks.map((song, index) => <li key={index}>\n            {song.track.artists[0].name}\n            <br />\n            {song.track.album.name}\n            <br />\n            {console.log(song.track.album.images)}\n            <img src={song.track.album.images[1].url} />\n          </li>)} */}"]},"metadata":{},"sourceType":"module"}