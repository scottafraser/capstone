{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createGenerateClassName;\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n/* eslint-disable no-underscore-dangle */\n\n\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\n\nfunction safePrefix(classNamePrefix) {\n  var prefix = String(classNamePrefix);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(prefix.length < 256, \"Material-UI: the class name prefix is too long: \".concat(prefix, \".\")) : void 0; // Sanitize the string as will be used to prefix the generated class name.\n\n  return prefix.replace(escapeRegex, '-');\n} // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\n\nfunction createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,\n      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var ruleCounter = 0;\n  return function (rule, styleSheet) {\n    ruleCounter += 1;\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0; // Code branch the whole block at the expense of more code.\n\n    if (dangerouslyUseGlobalCSS) {\n      if (styleSheet) {\n        if (styleSheet.options.name) {\n          return \"\".concat(styleSheet.options.name, \"-\").concat(rule.key);\n        }\n\n        if (styleSheet.options.classNamePrefix && process.env.NODE_ENV !== 'production') {\n          var prefix = safePrefix(styleSheet.options.classNamePrefix);\n          return \"\".concat(prefix, \"-\").concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n        }\n      }\n\n      if (process.env.NODE_ENV === 'production') {\n        return \"\".concat(productionPrefix).concat(seed).concat(ruleCounter);\n      }\n\n      return \"\".concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(productionPrefix).concat(seed).concat(ruleCounter);\n    }\n\n    if (styleSheet && styleSheet.options.classNamePrefix) {\n      var _prefix = safePrefix(styleSheet.options.classNamePrefix);\n\n      return \"\".concat(_prefix, \"-\").concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n    }\n\n    return \"\".concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n  };\n}","map":{"version":3,"sources":["/Users/Guest/Desktop/capstone/client/node_modules/@material-ui/core/styles/createGenerateClassName.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","createGenerateClassName","_warning","escapeRegex","safePrefix","classNamePrefix","prefix","String","process","env","NODE_ENV","length","concat","replace","options","arguments","undefined","_options$dangerouslyU","dangerouslyUseGlobalCSS","_options$productionPr","productionPrefix","_options$seed","seed","ruleCounter","rule","styleSheet","join","name","key","_prefix"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createGenerateClassName;\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\n/* eslint-disable no-underscore-dangle */\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\n\nfunction safePrefix(classNamePrefix) {\n  var prefix = String(classNamePrefix);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(prefix.length < 256, \"Material-UI: the class name prefix is too long: \".concat(prefix, \".\")) : void 0; // Sanitize the string as will be used to prefix the generated class name.\n\n  return prefix.replace(escapeRegex, '-');\n} // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\n\nfunction createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,\n      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var ruleCounter = 0;\n  return function (rule, styleSheet) {\n    ruleCounter += 1;\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0; // Code branch the whole block at the expense of more code.\n\n    if (dangerouslyUseGlobalCSS) {\n      if (styleSheet) {\n        if (styleSheet.options.name) {\n          return \"\".concat(styleSheet.options.name, \"-\").concat(rule.key);\n        }\n\n        if (styleSheet.options.classNamePrefix && process.env.NODE_ENV !== 'production') {\n          var prefix = safePrefix(styleSheet.options.classNamePrefix);\n          return \"\".concat(prefix, \"-\").concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n        }\n      }\n\n      if (process.env.NODE_ENV === 'production') {\n        return \"\".concat(productionPrefix).concat(seed).concat(ruleCounter);\n      }\n\n      return \"\".concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(productionPrefix).concat(seed).concat(ruleCounter);\n    }\n\n    if (styleSheet && styleSheet.options.classNamePrefix) {\n      var _prefix = safePrefix(styleSheet.options.classNamePrefix);\n\n      return \"\".concat(_prefix, \"-\").concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n    }\n\n    return \"\".concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n  };\n}"]},"metadata":{},"sourceType":"script"}